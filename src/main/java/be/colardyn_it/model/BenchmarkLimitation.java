package be.colardyn_it.model;

// Generated Jul 23, 2009 9:36:51 PM by Hibernate Tools 3.2.2.GA


import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
import lombok.ToString;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * BenchmarkLimitation generated by hbm2java
 */
@Entity
@Table(name = "benchmark_limitation")
@Builder
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, exclude = {"contestBenchmark","benchmarkLimitationConfigurations","benchmarkLimitationType"})
public class BenchmarkLimitation implements java.io.Serializable {

    private Integer limitationId;
    private BenchmarkLimitationType benchmarkLimitationType;
    private ContestBenchmark contestBenchmark;
    private Set<BenchmarkLimitationConfiguration> benchmarkLimitationConfigurations = new HashSet<BenchmarkLimitationConfiguration>(0);

    @javax.persistence.Transient()
    public String getConfigValue() {
        StringBuffer buffer = new StringBuffer();
        for (BenchmarkLimitationConfiguration configuration : benchmarkLimitationConfigurations) {
            buffer.append(configuration.getConfigKey() + ": " + configuration.getConfigValue());
        }
        return buffer.toString();
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "LIMITATION_ID", unique = true, nullable = false)
    public Integer getLimitationId() {
        return this.limitationId;
    }

    public void setLimitationId(Integer limitationId) {
        this.limitationId = limitationId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TYPE_ID", nullable = false)
    @NotNull
    public BenchmarkLimitationType getBenchmarkLimitationType() {
        return this.benchmarkLimitationType;
    }

    public void setBenchmarkLimitationType(BenchmarkLimitationType benchmarkLimitationType) {
        this.benchmarkLimitationType = benchmarkLimitationType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CONTEST_BENCHMARK_ID", nullable = false)
    @NotNull
    public ContestBenchmark getContestBenchmark() {
        return this.contestBenchmark;
    }

    public void setContestBenchmark(ContestBenchmark contestBenchmark) {
        this.contestBenchmark = contestBenchmark;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "benchmarkLimitation")
    public Set<BenchmarkLimitationConfiguration> getBenchmarkLimitationConfigurations() {
        return this.benchmarkLimitationConfigurations;
    }

    public void setBenchmarkLimitationConfigurations(Set<BenchmarkLimitationConfiguration> benchmarkLimitationConfigurations) {
        this.benchmarkLimitationConfigurations = benchmarkLimitationConfigurations;
    }

}
